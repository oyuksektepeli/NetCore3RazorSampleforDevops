# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: yuksektekacrsc

- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    repository: netcore3webapprazor
    tags: |
      latest
      $(Build.SourceVersion)


- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'azuremvpsubs'
    azureResourceGroup: 'nc-aks-rg'
    kubernetesCluster: 'ncaks'
    command: 'init'
    upgradeTiller: false
    waitForExecution: false
    arguments: '--force-upgrade --client-only --service-account tiller'

- task: HelmDeploy@0
  inputs:
    command: 'package'
    chartPath: '$(System.DefaultWorkingDirectory)/helm/netcore3webapprazor/'
    destination: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'



- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'azuremvpsubs'
    azureResourceGroup: 'nc-aks-rg'
    kubernetesCluster: 'ncaks'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Build.ArtifactStagingDirectory)/drop/netcore3webapprazor-0.1.0.tgz'
    recreate: true
    resetValues: true
    force: true


